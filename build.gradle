buildscript {
    ext {
        coverallsVersion = "2.7.1"
        springBootVersion = "1.4.2.RELEASE"
        springDependencyManagementVersion = "0.6.1.RELEASE"
        queryDslVersion = "1.0.6"
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}")
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${queryDslVersion}")
        classpath("org.kt3k.gradle.plugin:coveralls-gradle-plugin:${coverallsVersion}")
    }
}

apply plugin: 'java'

ext {
    jUnitVersion = "4.+"
    lombokVersion = "1.16.12"

    //docker
    dockerRepository = 'klhauser/microservices4vaadin-'
}

// all subprojects
project(':microservices') {
    subprojects {
        apply plugin: 'java'
        apply plugin: 'idea'
        apply plugin: 'org.springframework.boot'
        apply plugin: 'io.spring.dependency-management'
        apply plugin: 'maven'

        springBoot {
            requiresUnpack = ['com.netflix.eureka:eureka-core','com.netflix.eureka:eureka-client']
        }

        repositories {
            mavenLocal()
            mavenCentral()
        }

        dependencyManagement {
            imports {
                mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:Camden.SR5'
            }
        }

        group = 'microservices4vaadin'
        version = '0.0.1-SNAPSHOT'

        sourceCompatibility = 1.8
        targetCompatibility = 1.8

        configurations.all {
            // check for updates every build
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        }

        dependencies {
            compile("org.springframework.boot:spring-boot-starter-web")

            compile("org.springframework.cloud:spring-cloud-starter-config")
            compile("org.springframework.cloud:spring-cloud-starter-eureka")

            compile "org.projectlombok:lombok:${lombokVersion}"
            compile("com.google.guava:guava:18.0")
            compile("com.jayway.jsonpath:json-path")

            testCompile("org.springframework.boot:spring-boot-starter-test")
            testCompile("junit:junit:${jUnitVersion}")
        }
        repositories {
            maven {
                url 'https://repo.spring.io/libs-snapshot'
            }
        }

        jar {
            manifest.attributes provider: 'gradle'
        }

        apply from: '../../gradle/jacoco.gradle'
        apply from: '../../gradle/docker.gradle'
    }
}

if (project != project(':common')) {
    apply from: 'gradle/jacocoAll.gradle'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}
