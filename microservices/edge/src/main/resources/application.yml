server:
  port: 443
  use-forward-headers: true
  ssl:
    key-store: classpath:keystore.jks
    key-store-password: example
    key-password: example

ribbon:
  restclient.enabled: true
  TrustStore: keystore.jks
  TrustStorePassword : example
  ReadTimeout: 60000
  IsSecure: true
  MaxAutoRetries: 2
    
spring:
  redis:
    host: localhost
    port: 6379

zuul:
  add-proxy-headers: true
  debug:
    request: true
  routes:
    authserver:
      path: /authserver/**
      serviceId: authserver
    user:
      path: /user/**
      url: https://localhost:443/authserver/uaa/user
    register:
      path: /register/**
      url: https://localhost:443/authserver/uaa/register
    frontend1:
      path: /ui/**
      serviceId: frontend
      stripPrefix: false
    frontend2:
      path: /frontend/**
      serviceId: frontend

eureka:
  client:
    serviceUrl:
      defaultZone: http://${eureka.host:localhost}:${eureka.port:8761}/eureka/ 
    
hystrix:
  command:
    frontend:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000
    authserver:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000

management:
  security:
    enabled: false
security:
  basic:
    enabled: false
  user:
    password: none
  oauth2:
    resource:
      userInfoUri: https://localhost:443/uaa/user

logging:
  level:
    org.springframework.boot: INFO
    org.springframework.session: INFO
    org.springframework.security: INFO
    org.springframework.web: INFO
    com.netflix.discovery: 'OFF'

---
# For deployment in Docker containers
spring:
  profiles: docker
  redis:
    host: redis

security:
  oauth2:
    resource:
      userInfoUri: https://localhost:443/uaa/user
