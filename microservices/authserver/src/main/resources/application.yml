server:
  contextPath: /uaa
  port: 7777
  ssl:
    key-store: classpath:keystore.jks
    key-store-password: example
    key-password: example

eureka:
  instance:
    nonSecurePortEnabled: false
    securePortEnabled: true
    securePort: 7777
  client:
    serviceUrl:
      defaultZone: http://${eureka.host:localhost}:${eureka.port:8761}/eureka/ 
      
email:
  username: USERNAME
  password: PASSWORD
mail:
  smtp:
    host: smtp.gmail.com
    port: 587
    auth: true
    starttls:
      enable: true

security:
  sessions: stateless
  basic:
    enabled: false

spring:
  application:
    name: authserver
  profiles:
    active: ${profile:default}
  redis:
    host: localhost
    port: 6379
  # DataSource settings: set here your own configurations for the database
  # connection.
  datasource:
    url: jdbc:mysql://localhost:3306/microservice4vaadin_authserverdb?useSSL=false&zeroDateTimeBehavior=convertToNull
    username: root
    password:
    driverClassName: com.mysql.jdbc.Driver
    testOnBorrow: true
    validationQuery: SELECT 1
  jpa:
    # Specify the DBMS
    database: MYSQL
    # Show or not log for each sql query
    show-sql: false
    hibernate:
      # Hibernate ddl auto (create, create-drop, update)
      ddl-auto: none
      # Naming strategy
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        # Use spring.jpa.properties.* for Hibernate native properties (the prefix is
        # stripped before adding them to the entity manager)
        dialect: org.hibernate.dialect.MySQL5Dialect

flyway:
  enabled: true
  baseline-on-migrate: true

logging:
  level:
    microservices4vaadin: INFO
    org.springframework.session: INFO
    org.springframework.security: INFO
    com.netflix.discovery: 'OFF'

---
# For deployment in Docker containers
spring:
  profiles: docker
  redis:
    host: redis
  datasource:
    url: jdbc:mysql://mysql/microservice4vaadin_authserverdb?useSSL=false&zeroDateTimeBehavior=convertToNull  
